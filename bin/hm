#!/usr/bin/env bash

PREFIX="$HOME/"${HM_HOME:-.config/home-manager}


# colors
RED='\033[0;31m'
NC='\033[0m' # No Color

function wait-any-key {
    echo 'Press any key to continue...'; read -k1 -s
    echo ""
}

function quit-with-help {
    cat << EOF
usage: hm <command> <env>

Commands:
build  - build env to ./result/
switch - build env to ~/

Environments:
Loads ~/.config/home-manager/envs/<env>.nix

EOF

    exit 0
}

function renderExamples {
    test -e "$PREFIX" && {
	echo "$PREFIX is already present, skiping examples"
	return 0
    }
    mkdir -p "$PREFIX/envs"
    mkdir -p "$PREFIX/hello"

    if [ ! -f "$PREFIX/envs/example.nix" ]; then
        cat @example@/envs/example.nix > "$PREFIX/envs/example.nix"
    fi

    if [ ! -f "$PREFIX/hello/default.nix" ]; then
        cat @example@/hello/default.nix > "$PREFIX/hello/default.nix"
    fi

    if [ ! -f "$PREFIX/hello/hello.conf" ]; then
        cat @example@/hello/hello.conf > "$PREFIX/hello/hello.conf"
    fi
}

function bootstrap {
    # install home-manager
    mkdir -p $HOME/.local/src
    git clone https://github.com/rycee/home-manager $HOME/.local/src/home-manager
    nix-env -iA home-manager -f $HOME/.local/src/home-manager

    if [ ! -d /nix/var/nix/profiles/per-user/$user ] || [ ! -d /nix/var/nix/profiles/per-user/$user ]; then
        echo "\nThe Nix installer doesn't setup multi-user gc-roots for some reason!"
        echo "The next command will require sudo:"
        echo "sudo mkdir -m 0755 -p /nix/var/nix/{profiles,gcroots}/per-user/$USER"
        echo "\n"

        wait-any-key

        sudo mkdir -m 0755 -p /nix/var/nix/{profiles,gcroots}/per-user/$USER
    fi


    if hash home-manager ; then
        renderExamples
        echo "\nBootstrap successful!"
    else
        echo "Hmm, home-manager binary can't be found..."
        echo "Bootstrap likely failed somehow. Aborting!"
    fi
    exit 0
}

function execute {
    # No argument, show help
    if [[ $# -ne 1 ]] ; then
        quit-with-help;
    fi

    local envfile="$PREFIX/envs/$1.nix"

    # envfile doesn't exist, complain
    if [ ! -e $envfile ]; then
        echo "Envfile not found: $envfile"
        exit 0
    fi

    # plugin support
    local HMPKGS_DEFAULT="$HOME/.config/home-manager/hmpkgs"
    local HMPKGS_PATH="${HM_PATH:-$HMPKGS_DEFAULT}"
    export NIX_PATH="hmpkgs=$HMPKGS_PATH:home-manager=$HOME/.local/src/home-manager:$NIX_PATH";
    echo "NIX_PATH: $NIX_PATH"
    # pull in user's secrets
    source ~/config/secrets

    home-manager -v -f $envfile $command
}

hash home-manager || {
    echo "Home-manager was not found. It will now be installed."
    wait-any-key
    bootstrap
}

# no arguments, show help
if [[ $# -eq 0 ]] ; then
    quit-with-help
fi

command="$1"; shift

case "$command" in
    build)  execute "$@";;
    switch) execute "$@";;
    news)   execute "$@";;
    *)      echo -e "No such '${RED}$command${NC}' command."; quit-with-help ;;
esac

